{"version":3,"sources":["webpack:///src/app/services/orders.service.ts","webpack:///src/app/views/orders/orders.component.ts","webpack:///src/app/views/orders/orders.component.html","webpack:///src/app/views/orders/orders.component.scss","webpack:///src/app/views/orders/orders.module.ts","webpack:///src/app/views/orders/orders-routing.module.ts"],"names":["OrdersService","http","apiUrl","payload","post","get","id","providedIn","OrdersComponent","medServ","orderserv","router","p","medicines","orders","alertsDismiss","submitted","subTotal","listId","orderedProduct","localMedicine","orderList","getMedicines","getOrders","setTimeout","console","log","_orderDate","nativeElement","valueAsDate","Date","subscribe","res","data","deleteOrder","resp","event","e","medicine","find","med","_id","rate","mrp","quantity","val","orderQuantity","isNaN","gstRate","gstAmount","discount","disAmount","gt","grandTotal","paidAmount","Math","floor","random","brand","batchNo","expiry","pcaking","packing","productName","total","medicine_id","push","length","select1","orderTotal","alertNot","i","filter","orderitem","valObj","check","customerName","orderedItem","formValues","isValid","postOrders","reSet","myModal","hide","err","customerContact","paymentMethod","navigate","then","result","location","replace","orderDate","dueAmount","paymentType","invoiceId","type","message","timeout","selector","template","OrdersModule","imports","forRoot","declarations","routes","path","component","title","OrdersRoutingModule","forChild","exports"],"mappings":"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","file":"views-orders-orders-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n  public apiUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postOrders(payload){\r\n    return this.http.post(`${this.apiUrl}api/c/orders/create`, payload);\r\n  }\r\n\r\n  getOrders() {\r\n    return this.http.get(`${this.apiUrl}api/c/orders`);\r\n  }\r\n  deleteOrder(id){\r\n    return this.http.delete(`${this.apiUrl}api/c/orders/${id}`)\r\n\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Response } from \"../../interfaces/response\";\r\nimport { MedicineService } from \"../../services/medicine.service\";\r\nimport { OrdersService } from \"../../services/orders.service\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n@Component({\r\n  selector: \"app-orders\",\r\n  templateUrl: \"./orders.component.html\",\r\n  styleUrls: [\"./orders.component.scss\"],\r\n})\r\nexport class OrdersComponent implements OnInit, OnDestroy {\r\n  p: number = 1;\r\n  medicines = [];\r\n  orders = [];\r\n  alertsDismiss: any = [];\r\n  public orderForm: FormGroup;\r\n  public submitted = false;\r\n  @ViewChild(\"orderDateIN\") _orderDate;\r\n  @ViewChild(\"largeModal\") public myModal: ModalDirective;\r\n\r\n  constructor(\r\n    private medServ: MedicineService,\r\n    private orderserv: OrdersService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getMedicines();\r\n    this.getOrders();\r\n    setTimeout(() => {\r\n      console.log(\"this._orderDate: \", this._orderDate);\r\n      this._orderDate.nativeElement.valueAsDate = new Date();\r\n    }, 1000);\r\n  }\r\n\r\n  getMedicines() {\r\n    this.medServ.getMedicines().subscribe((res: Response) => {\r\n      console.log(\"res: >>>>>>>>>>>>\", res);\r\n      this.medicines = res.data;\r\n      console.log(this.medicines);\r\n    });\r\n  }\r\n  getOrders() {\r\n    this.orderserv.getOrders().subscribe((res: Response) => {\r\n      this.orders = res.data;\r\n      console.log(this.orders);\r\n    });\r\n  }\r\n  deleteOrder(id) {\r\n    this.orderserv.deleteOrder(id).subscribe((resp) => {\r\n      this.getOrders();\r\n    });\r\n  }\r\n  handlePageChange(event) {\r\n    this.p = event;\r\n  }\r\n  medicine;\r\n  rate;\r\n  quantity;\r\n  orderQuantity;\r\n  // total1;\r\n  subTotal = 0;\r\n  discount;\r\n  gstRate;\r\n  // grandTotal;\r\n  gstAmount;\r\n  disAmount;\r\n  paidAmount;\r\n  listId = 1;\r\n  paymentMethod;\r\n  orderedProduct = [];\r\n  // gstTotal;\r\n  orderDate;\r\n  customerName;\r\n  customerContact;\r\n\r\n  onChange(e) {\r\n    console.log(e);\r\n    if (e) {\r\n      this.medicine = this.medicines.find((med) => med._id == e);\r\n      console.log(\"this.medicine: \", this.medicine);\r\n      this.rate = this.medicine.mrp;\r\n      this.quantity = this.medicine.quantity;\r\n      console.log(this.medicine.rate);\r\n    } else {\r\n      this.rate = \"\";\r\n      this.quantity = \"\";\r\n    }\r\n  }\r\n\r\n  get total() {\r\n    const val = this.rate * this.orderQuantity;\r\n    return isNaN(val) ? \"\" : val;\r\n  }\r\n  get gstTotal() {\r\n    const val = 0.01 * this.gstRate * this.subTotal;\r\n    this.gstAmount = isNaN(val) ? \"\" : val;\r\n    return this.subTotal + this.gstAmount;\r\n  }\r\n\r\n  get grandTotal() {\r\n    const val = 0.01 * this.discount * this.subTotal;\r\n    this.disAmount = isNaN(val) ? \"\" : val;\r\n    const gt = this.subTotal + this.gstAmount - this.disAmount;\r\n    return gt;\r\n  }\r\n\r\n  get dueAmount() {\r\n    const val = this.grandTotal - this.paidAmount;\r\n    return isNaN(val) ? \"\" : val;\r\n  }\r\n  get invoiceId() {\r\n    return Math.floor(Math.random() * 1000000 + 1);\r\n  }\r\n\r\n  // onQuant(ev) {\r\n  //   this.orderQuantity = ev.target.value;\r\n  //   // this.total = this.rate * this.orderQuantity;\r\n  // }\r\n\r\n  localMedicine = {};\r\n  orderList = [];\r\n\r\n  @ViewChild(\"select1\") select1;\r\n  onAdd() {\r\n    if (this.orderQuantity) {\r\n      this.localMedicine = {\r\n        brand: this.medicine.brand,\r\n        batchNo: this.medicine.batchNo,\r\n        expiry: this.medicine.expiry,\r\n        pcaking: this.medicine.packing,\r\n        medicine: this.medicine.productName,\r\n        mrp: this.rate,\r\n        orderQuantity: this.orderQuantity,\r\n        total: this.total,\r\n        medicine_id: this.medicine._id,\r\n      };\r\n      this.orderList.push(this.localMedicine);\r\n      console.log(this.orderList);\r\n      this.rate = \"\";\r\n      this.quantity = \"\";\r\n      this.orderQuantity = \"\";\r\n      this.subTotal =\r\n        this.subTotal + this.orderList[this.orderList.length - 1].total;\r\n      console.log(this.subTotal);\r\n      console.log(\"check>>>\", this.select1);\r\n      this.subTotal = 0;\r\n      this.orderTotal();\r\n    }\r\n    else{\r\n      this.alertNot(\"danger\", \"Please add order quantity\");\r\n    }\r\n  }\r\n\r\n  orderTotal() {\r\n    for (let i = 0; i < this.orderList.length; i++) {\r\n      if (this.orderList[i].total) {\r\n        this.subTotal = this.subTotal + this.orderList[i].total;\r\n      }\r\n    }\r\n    // this.grandTotal = this.subTotal;\r\n    // this.gstTotal = this.subTotal;\r\n  }\r\n\r\n  removeItem(id) {\r\n    this.orderList = this.orderList.filter((orderitem) => id != orderitem.medicine_id);\r\n    this.subTotal = 0;\r\n    this.orderTotal();\r\n  }\r\n  isValid(valObj) {\r\n    var check = false;\r\n    if (valObj.customerName && valObj.paidAmount && valObj.orderedItem.length > 0) {\r\n      check = true;\r\n    }\r\n\r\n    return check;\r\n  }\r\n\r\n  submit() {\r\n    console.log();\r\n    console.log(this.formValues);\r\n    if(this.isValid(this.formValues)){\r\n      this.orderserv.postOrders(this.formValues).subscribe(\r\n        (resp) => {\r\n          if (resp) {\r\n            console.log(\"success\", resp);\r\n            this.reSet();\r\n            this.myModal.hide();\r\n            this.alertNot(\"success\", \"Success\");\r\n            this.getOrders();\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n    else{\r\n      this.alertNot(\"danger\", \"Please enter all the details\");\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  reSet() {\r\n    this.customerContact = \"\";\r\n    this.customerName = \"\";\r\n    this.paymentMethod = \"\";\r\n    this.subTotal = 0;\r\n    this.discount = null;\r\n    this.gstRate = null;\r\n    this.paidAmount = null;\r\n    this.orderList = [];\r\n  }\r\n\r\n  toGetPrint(id) {\r\n    this.router.navigate([]).then((result) => {\r\n      location.replace(`#/orders/${id}`);\r\n    });\r\n  }\r\n\r\n  get formValues() {\r\n    return {\r\n      orderDate: this.orderDate,\r\n      customerName: this.customerName,\r\n      customerContact: this.customerContact,\r\n      orderedItem: this.orderList,\r\n      subTotal: this.subTotal,\r\n      gstRate: this.gstRate,\r\n      gstAmount: this.gstAmount,\r\n      discount: this.disAmount,\r\n      dueAmount: this.dueAmount,\r\n      paidAmount: this.paidAmount,\r\n      grandTotal: this.grandTotal,\r\n      paymentType: this.paymentMethod,\r\n      invoiceId: this.invoiceId,\r\n    };\r\n  }\r\n  alertNot(type, message): void {\r\n    this.alertsDismiss.push({\r\n      type: type,\r\n      message: `${message}`,\r\n      timeout: 5000\r\n    });\r\n  }\r\n}\r\n","export default \"\\r\\n\\r\\n<div class=\\\"notification-alert\\\" *ngFor=\\\"let alert of alertsDismiss\\\" style=\\\"position: absolute; left: 0; right: 0; margin: auto; z-index: 999999 !important; width: 20%;\\\">\\r\\n  <alert [type]=\\\"alert.type\\\" dismissOnTimeout=\\\"5000\\\" [dismissible]=\\\"true\\\"\\r\\n    ><strong>{{alert?.message}}</strong></alert\\r\\n  >\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #largeModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header card-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">New Order</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"largeModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <label for=\\\"date-input\\\">Order Date</label>\\r\\n            <input\\r\\n              #orderDateIN\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"date-input\\\"\\r\\n              type=\\\"date\\\"\\r\\n              name=\\\"date-input\\\"\\r\\n              placeholder=\\\"date\\\"\\r\\n              [(ngModel)]=\\\"orderDate\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\r\\n          <div class=\\\"form-group col-md-5\\\">\\r\\n            <label for=\\\"cutomerName\\\">Customer Name</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              placeholder=\\\"Customer Name\\\"\\r\\n              [(ngModel)]=\\\"customerName\\\"\\r\\n              name=\\\"customerName\\\"\\r\\n              id=\\\"customerName\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-5\\\">\\r\\n            <label for=\\\"customerContact\\\">Contact</label>\\r\\n            <input\\r\\n              type=\\\"number\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"customerContact\\\"\\r\\n              placeholder=\\\"Contact\\\"\\r\\n              [(ngModel)]=\\\"customerContact\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"table\\\" style=\\\"border-bottom: 2px solid grey\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Product</th>\\r\\n                <th>MRP</th>\\r\\n                <th>Available Quantity</th>\\r\\n                <th>Quantity</th>\\r\\n                <th>Total</th>\\r\\n                <th>Add</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <ng-select\\r\\n                      #select1\\r\\n                      name=\\\"select1\\\"\\r\\n                      class=\\\"form-control custom\\\"\\r\\n                      (change)=\\\"onChange($event)\\\"\\r\\n                    >\\r\\n                      <ng-option\\r\\n                        *ngFor=\\\"let medicine of medicines\\\"\\r\\n                        [value]=\\\"medicine?._id\\\"\\r\\n\\r\\n                      >\\r\\n                        {{ medicine?.productName }}\\r\\n                      </ng-option>\\r\\n                    </ng-select>\\r\\n\\r\\n                    <!-- <select\\r\\n                      #select1\\r\\n                      name=\\\"select1\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      (change)=\\\"onChange($event)\\\"\\r\\n                    >\\r\\n                      <option value=\\\"0\\\">Select Medicine</option>\\r\\n                      <option\\r\\n                        [value]=\\\"medicine?._id\\\"\\r\\n                        *ngFor=\\\"let medicine of medicines\\\"\\r\\n                      >\\r\\n                        {{ medicine?.productName }}\\r\\n                      </option>\\r\\n                    </select> -->\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      disabled\\r\\n                      [(ngModel)]=\\\"rate\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      disabled\\r\\n                      [(ngModel)]=\\\"quantity\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"number\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"orderQuantity\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      disabled\\r\\n                      [(ngModel)]=\\\"total\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <Button class=\\\"btn btn-success\\\" (click)=\\\"onAdd()\\\"\\r\\n                    ><span class=\\\"cil-plus\\\"></span\\r\\n                  ></Button>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let orderitem of orderList\\\">\\r\\n                <td>{{ orderitem?.medicine }}</td>\\r\\n                <td>{{ orderitem?.rate }}</td>\\r\\n                <td></td>\\r\\n                <td>{{ orderitem?.orderQuantity }}</td>\\r\\n                <td>{{ orderitem?.total }}</td>\\r\\n                <td>\\r\\n                  <button\\r\\n                    class=\\\"btn btn-danger\\\"\\r\\n                    (click)=\\\"removeItem(orderitem?.medicine_id)\\\"\\r\\n                  >\\r\\n                    <span class=\\\"cil-trash\\\"></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\r\\n          <div class=\\\"col-md-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"subtotal\\\">Sub Total</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"subtotal\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"subTotal\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"gst\\\">GST</label>\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"gst\\\"\\r\\n                placeholder=\\\"GST %\\\"\\r\\n                [(ngModel)]=\\\"gstRate\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"total\\\">Total</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"total\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"gstTotal\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"discount\\\">Discount (in %)</label>\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"discount\\\"\\r\\n                placeholder=\\\"Discount %\\\"\\r\\n                [(ngModel)]=\\\"discount\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"grandtotal\\\">Grand Total</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"grangtotal\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"grandTotal\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"paidamount\\\">Paid Amount</label>\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"paidamount\\\"\\r\\n                placeholder=\\\"Amount\\\"\\r\\n                [(ngModel)]=\\\"paidAmount\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"dueamount\\\">Due Amount</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dueamount\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"dueAmount\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"paymentType\\\">Payment Type</label>\\r\\n              <select\\r\\n                id=\\\"select1\\\"\\r\\n                name=\\\"select1\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"paymentMethod\\\"\\r\\n              >\\r\\n                <option value=\\\"0\\\">Please select</option>\\r\\n                <option value=\\\"Cash\\\">Cash</option>\\r\\n                <option value=\\\"Card\\\">Card</option>\\r\\n                <option value=\\\"UPI\\\">UPI</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-primary col-md-3\\\"\\r\\n          (click)=\\\"submit()\\\"\\r\\n        >\\r\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Submit\\r\\n        </button>\\r\\n        <button type=\\\"reset\\\" (click)=\\\"reSet()\\\" class=\\\"btn btn-danger col-md-3\\\">\\r\\n          <i class=\\\"fa fa-ban\\\"></i> Reset\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary col-md-3\\\"\\r\\n          (click)=\\\"largeModal.hide()\\\"\\r\\n        >\\r\\n          Close\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\\r\\n\\r\\n<div class=\\\"card\\\" style=\\\"margin-top: 30px\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h6>Order datails</h6>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"header row\\\" style=\\\"margin-bottom: 20px\\\">\\r\\n      <div class=\\\"input-group col-md-3\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          id=\\\"input1-group2\\\"\\r\\n          name=\\\"input1-group2\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Search Orders\\\"\\r\\n          [(ngModel)]=\\\"term\\\"\\r\\n        />\\r\\n        <span class=\\\"input-group-append\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-pill\\\">\\r\\n            <i class=\\\"fa fa-search\\\"></i> Search\\r\\n          </button>\\r\\n        </span>\\r\\n      </div>\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-pill btn-secondary mr-1 col-md-3\\\"\\r\\n        data-toggle=\\\"modal\\\"\\r\\n        (click)=\\\"largeModal.show()\\\"\\r\\n      >\\r\\n        New Order\\r\\n      </button>\\r\\n    </div>\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>S.No.</th>\\r\\n          <th>Invoice Id</th>\\r\\n          <th>Order Date</th>\\r\\n          <th>Customer Name</th>\\r\\n          <th>Contact</th>\\r\\n          <th>Payment status</th>\\r\\n          <th>update</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr\\r\\n          *ngFor=\\\"\\r\\n            let order of orders\\r\\n              | filter: term\\r\\n              | paginate\\r\\n                : {\\r\\n                    itemsPerPage: 10,\\r\\n                    currentPage: p,\\r\\n                    totalItems: orders.length\\r\\n                  };\\r\\n            let i = index\\r\\n          \\\"\\r\\n        >\\r\\n          <td>{{ i + 1 }}</td>\\r\\n          <td>{{ order?.invoiceId }}</td>\\r\\n          <td>{{ order?.createdAt | amDateFormat: \\\"DD/MM/YYYY\\\" }}</td>\\r\\n          <td>{{ order?.customerName }}</td>\\r\\n          <td>{{ order?.customerContact }}</td>\\r\\n          <td>{{ order?.paymentType }}</td>\\r\\n          <td>\\r\\n            <div class=\\\"update row\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-sm btn-secondary btn-pill\\\"\\r\\n                (click)=\\\"toGetPrint(order?._id)\\\"\\r\\n              >\\r\\n                Print\\r\\n              </button>\\r\\n              <button\\r\\n                class=\\\"btn btn-sm btn-danger btn-pill\\\"\\r\\n                (click)=\\\"deleteOrder(order?._id)\\\"\\r\\n              >\\r\\n                <span class=\\\"cil-trash\\\"></span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <pagination-controls\\r\\n      (pageChange)=\\\"handlePageChange($event)\\\"\\r\\n    ></pagination-controls>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \".ng-select.custom ::ng-deep .ng-dropdown-panel {\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  display: block;\\n  margin-top: 8px;\\n  margin-left: -12px;\\n  background: white;\\n  border: 1px solid #e4e7ea;\\n  min-width: 150px;\\n  border-radius: 4px;\\n  border-top: none;\\n}\\n\\n.ng-select.custom ::ng-deep .ng-dropdown-panel .ng-dropdown-panel-items .ng-option:hover {\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  display: block;\\n  background: #f0f3f5;\\n}\\n\\n.ng-select.custom ::ng-deep .ng-dropdown-panel .ng-dropdown-panel-items .ng-option {\\n  cursor: pointer;\\n  padding-left: 15px;\\n  padding: 6px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxvcmRlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtBQUFKOztBQUlBO0VBQ0ksc0JBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBREo7O0FBR0E7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0FBQUoiLCJmaWxlIjoib3JkZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubmctc2VsZWN0LmN1c3RvbSA6Om5nLWRlZXAgLm5nLWRyb3Bkb3duLXBhbmVsICB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTJweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZTRlN2VhO1xuICAgIG1pbi13aWR0aDogMTUwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJvcmRlci10b3A6IG5vbmU7XG5cbn1cblxuLm5nLXNlbGVjdC5jdXN0b20gOjpuZy1kZWVwIC5uZy1kcm9wZG93bi1wYW5lbCAubmctZHJvcGRvd24tcGFuZWwtaXRlbXMgLm5nLW9wdGlvbjpob3ZlciB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogI2YwZjNmNTtcbn1cbi5uZy1zZWxlY3QuY3VzdG9tIDo6bmctZGVlcCAubmctZHJvcGRvd24tcGFuZWwgLm5nLWRyb3Bkb3duLXBhbmVsLWl0ZW1zIC5uZy1vcHRpb24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZzogNnB4O1xufSJdfQ== */\";","import { NgModule, ViewChild } from '@angular/core';\r\nimport { OrdersComponent} from './orders.component';\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\nimport { ModalDirective, ModalModule } from 'ngx-bootstrap/modal';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MomentModule } from 'angular2-moment';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\n\r\n@NgModule({\r\n  imports: [\r\n    OrdersRoutingModule,\r\n    ModalModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MomentModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule,\r\n    AlertModule.forRoot()\r\n\r\n\r\n  ],\r\n  declarations: [ OrdersComponent ]\r\n})\r\nexport class OrdersModule { \r\n  @ViewChild('largeModal') public largeModal: ModalDirective;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrdersComponent } from './orders.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrdersComponent,\r\n    data: {\r\n      title: 'Orders'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrdersRoutingModule {}"]}