{"version":3,"sources":["./src/app/views/brand/brand.module.ts","./src/app/views/brand/brand-routing.module.ts","./src/app/views/brand/brand.component.html","./src/app/views/brand/brand.component.ts","./src/app/views/brand/brand.component.scss"],"names":[],"mappings":"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","file":"views-brand-brand-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrandComponent} from './brand.component';\nimport { BrandRoutingModule } from './brand-routing.module';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\n@NgModule({\n  imports: [\n    BrandRoutingModule,\n    ModalModule,\n    HttpClientModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule,\n    NgxPaginationModule,\n    AlertModule.forRoot()\n\n  ],\n  declarations: [ BrandComponent ]\n})\nexport class BrandModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BrandComponent } from './brand.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BrandComponent,\n    data: {\n      title: 'Brand'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BrandRoutingModule {}\n","export default \"<div class=\\\"notification-alert\\\" *ngFor=\\\"let alert of alertsDismiss\\\" style=\\\"position: absolute; left: 0; right: 0; margin: auto; z-index: 999999 !important; width: 20%;\\\">\\n  <alert [type]=\\\"alert.type\\\" dismissOnTimeout=\\\"5000\\\" [dismissible]=\\\"true\\\"\\n    ><strong>{{alert?.message}}</strong></alert\\n  >\\n</div>\\n<div\\n  bsModal\\n  #myModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"myModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n  [config]=\\\"config\\\"\\n\\n>\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header card-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add New Brand</h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"myModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\" id=\\\"medicineAddForm\\\" [formGroup]=\\\"addBrandForm\\\">\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"date-input\\\">Description</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"date-input\\\"\\n                type=\\\"text\\\"\\n                name=\\\"date-input\\\"\\n                placeholder=\\\"desc\\\"\\n                formControlName=\\\"desc\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Status</label>\\n              <select\\n                id=\\\"select1\\\"\\n                name=\\\"select1\\\"\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"Select Status\\\"\\n                (change)=\\\"onChang($event)\\\"\\n              >\\n                <option value=\\\"0\\\">Select Status</option>\\n                <option [value]=\\\"true\\\">Available</option>\\n                <option [value]=\\\"false\\\">Not Available</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Brand</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"company\\\"\\n                placeholder=\\\"brand\\\"\\n                formControlName=\\\"brand\\\"\\n              />\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Other</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"MRP\\\"\\n                formControlName=\\\"other\\\"\\n              />\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button\\n          type=\\\"submit\\\"\\n          class=\\\"btn btn-primary col-md-3\\\"\\n          (click)=\\\"submit()\\\"\\n          type=\\\"submit\\\"\\n          form:submit\\n        >\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Add\\n        </button>\\n        <button type=\\\"reset\\\" class=\\\"btn btn-danger col-md-3\\\" (click)=\\\"reSet()\\\">\\n          <i class=\\\"fa fa-ban\\\"></i> Reset\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary col-md-3\\\"\\n          (click)=\\\"myModal.hide()\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n<!-- /.modal -->\\n<div\\n  bsModal\\n  #updateModal=\\\"bs-modal\\\"\\n  class=\\\"modal fade\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"updateModalLabel\\\"\\n  aria-hidden=\\\"true\\\"\\n  [config]=\\\"config\\\"\\n\\n>\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header card-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add {{editBrand?.brand}} </h4>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"close\\\"\\n          (click)=\\\"updateModal.hide()\\\"\\n          aria-label=\\\"Close\\\"\\n        >\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\" id=\\\"medicineAddForm\\\" >\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"date-input\\\">Description</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                id=\\\"date-input1\\\"\\n                type=\\\"text\\\"\\n                name=\\\"date-input\\\"\\n                placeholder=\\\"desc\\\"\\n                [(ngModel)]=\\\"editBrand.desc\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Status</label>\\n              <select\\n                id=\\\"select1\\\"\\n                name=\\\"select1\\\"\\n                class=\\\"form-control\\\"\\n                (change)=\\\"onChang($event)\\\"\\n                [(ngModel)]=\\\"editBrand.status\\\"\\n              >\\n                <option [value]=\\\"true\\\">Available</option>\\n                <option [value]=\\\"false\\\">Not Available</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Brand</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"company1\\\"\\n                placeholder=\\\"brand\\\"\\n                [(ngModel)]=\\\"editBrand.brand\\\"\\n              />\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"company\\\">Other</label>\\n              <input\\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                id=\\\"a\\\"\\n                [(ngModel)]=\\\"editBrand.other\\\"\\n              />\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button\\n          type=\\\"submit\\\"\\n          class=\\\"btn btn-primary col-md-3\\\"\\n          (click)=\\\"submitUpdate()\\\"\\n          type=\\\"submit\\\"\\n          form:submit\\n        >\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Update\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary col-md-3\\\"\\n          (click)=\\\"updateModal.hide()\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n    <!-- /.modal-content -->\\n  </div>\\n  <!-- /.modal-dialog -->\\n</div>\\n\\n\\n<div class=\\\"card\\\" style=\\\"margin-top: 30px\\\">\\n  <div class=\\\"card-header\\\">\\n    <h6>Available Brands</h6>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"header row\\\" style=\\\"margin-bottom: 20px\\\">\\n      <div class=\\\"input-group col-md-3\\\">\\n        <input\\n          type=\\\"text\\\"\\n          id=\\\"input1-group2\\\"\\n          name=\\\"input1-group2\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Search Brands\\\"\\n          [(ngModel)]=\\\"searchTerm\\\"\\n          (ngModelChange)=\\\"searchBrand($event)\\\"\\n\\n        />\\n        <span class=\\\"input-group-append\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-pill\\\">\\n            <i class=\\\"fa fa-search\\\"></i> Search\\n          </button>\\n        </span>\\n      </div>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-pill btn-secondary mr-1 col-md-3\\\"\\n        data-toggle=\\\"modal\\\"\\n        (click)=\\\"myModal.show()\\\"\\n      >\\n        Add New Brand\\n      </button>\\n    </div>\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th>S. No.</th>\\n          <th>Brand Name</th>\\n          <th>Description</th>\\n          <th>status</th>\\n          <th>update</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr\\n          *ngFor=\\\"\\n            let brand of brands\\n              | paginate\\n                : {\\n                    itemsPerPage: 10,\\n                    currentPage: p,\\n                    totalItems: totalBrands\\n                  };\\n            let i = index\\n          \\\"\\n        >\\n          <td>{{ i + 1 }}</td>\\n          <td>{{ brand?.brand }}</td>\\n          <td>{{ brand?.desc }}</td>\\n          <td>\\n            <span\\n              class=\\\"badge\\\"\\n              [class.badge-success]=\\\"brand?.status\\\"\\n              [class.badge-danger]=\\\"!brand?.status\\\"\\n              >{{ brand?.status ? \\\"Available\\\" : \\\"NotAvailable\\\" }}</span\\n            >\\n          </td>\\n          <td>\\n            <div class=\\\"update row\\\">\\n              <button class=\\\"btn btn-sm btn-secondary btn-pill\\\" (click)=\\\"openUpdate(brand)\\\">Edit</button>\\n              <button\\n                class=\\\"btn btn-sm btn-danger btn-pill\\\"\\n                (click)=\\\"deleteBrands(brand._id)\\\"\\n              >\\n                <span class=\\\"cil-trash\\\"></span>\\n              </button>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <pagination-controls\\n      (pageChange)=\\\"handlePageChange($event)\\\"\\n    ></pagination-controls>\\n  </div>\\n</div>\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\nimport { Brand } from \"../../interfaces/response\";\nimport { BrandService } from \"../../services/brand.service\";\ndeclare let swal : any\n\n@Component({\n  selector: \"app-brand\",\n  templateUrl: \"./brand.component.html\",\n  styleUrls: [\"./brand.component.scss\"],\n})\nexport class BrandComponent implements OnInit {\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\n  @ViewChild(\"updateModal\") public updateModal: ModalDirective;\n  public addBrandForm: FormGroup;\n  public submitted = false;\n  alertsDismiss: any = [];\n  brands = [];\n  p: number = 1;\n  totalBrands;\n  searchTerm;\n  editBrand = {}\n  config = {\n    backdrop : 'static'\n  }\n  constructor(private brandServ: BrandService, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.getBrands(1);\n    this.buildForm();\n  }\n\n  getBrands(page) {\n    this.brandServ.getBrands(`skip=${page*10 -10}&limit=10`).subscribe((res: Brand) => {\n      this.brands = res.data;\n      this.totalBrands = res['total']\n    });\n  }\n  searchBrand(e){\n    this.brandServ.getBrands(`search=${this.searchTerm}&limit=10`).subscribe((res: Response) => {\n      this.brands = res['data'];\n      this.totalBrands = res['total']\n      this.p = 1\n    });\n  }\n  deleteBrands(id) {\n\n    swal({text : \"Do you want to delete this Brand\", icon  : 'warning', buttons: true, dangerMode: true,})\n    .then((del)=>{\n      if(del){\n        this.brandServ.deleteBrand(id).subscribe((resp) => {\n          this.getBrands(this.p);\n          swal({text : \"Brand deleted successfully\", icon  : 'success'});\n        })\n\n      }\n    })\n\n  \n  }\n  handlePageChange(event) {\n    this.p = event;\n    this.getBrands(this.p);\n\n  }\n  buildForm(): void {\n    this.addBrandForm = this.fb.group({\n      brand: [\"\"],\n      desc: [\"\"],\n      other: [\"\"],\n    });\n  }\n  status = false;\n  onChang(e) {\n    if (e.target.value == \"true\") {\n      this.status = true;\n    } else {\n      this.status = false;\n    }\n  }\n\n  isValid(valObj){\n    var check = false;\n    if(valObj.brand && valObj.desc){\n      check = true;\n    }\n    return check;\n  }\n  get f() {\n    console.log(\n      \"this.addBrandForm.value.status: \",\n      this.addBrandForm.value.status\n    );\n    return {\n      ...this.addBrandForm.value,\n      status: this.status,\n    };\n  }\n\n  submit() {\n    if(this.isValid(this.f)){\n      this.submitted = true;\n      this.brandServ.postBrand(this.f).subscribe((resp) =>{\n        if(resp){\n          this.getBrands(1)\n          this.addBrandForm.reset();\n          this.alertNot(\"success\", \"Success\");\n          swal({text : \"Brand Added successfully\", icon  : 'success'});\n          this.myModal.hide()\n          \n        }\n      })\n    }\n    else{\n      swal({text : \"Please enter all the details\", icon  : 'info'});\n\n    }\n    console.log(this.f);\n  }\n  reSet() {\n    this.addBrandForm.reset();\n  }\n  openUpdate(brand){\n  this.updateModal.show();\n  this.editBrand = brand\n  }\n  submitUpdate(){\n    console.log(this.editBrand)\n    this.brandServ.updateBrand(this.editBrand['_id'], this.editBrand).subscribe((res: Response) => {\n      console.log(\"res: >>>>>>>>>>>>\", res);\n      if(res){\n        this.getBrands(this.p);\n        this.updateModal.hide()\n        swal({\n          title : `${this.editBrand['brand']}`,\n          text : `Updated successfully`, \n          icon  : 'success'\n        });\n      }\n      else{\n      swal({text : \"Please enter all the details\", icon  : 'info'});\n      }\n    });\n  }\n\n  alertNot(type, message): void {\n    this.alertsDismiss.push({\n      type: type,\n      message: `${message}`,\n      timeout: 5000\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJicmFuZC5jb21wb25lbnQuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}