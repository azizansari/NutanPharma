{"version":3,"sources":["webpack:///src/app/views/brand/brand.module.ts","webpack:///src/app/views/brand/brand-routing.module.ts","webpack:///src/app/views/brand/brand.component.html","webpack:///src/app/views/brand/brand.component.ts","webpack:///src/app/views/brand/brand.component.scss"],"names":["BrandModule","imports","forRoot","declarations","routes","path","component","data","title","BrandRoutingModule","forChild","exports","BrandComponent","brandServ","fb","submitted","alertsDismiss","brands","p","status","getBrands","buildForm","subscribe","res","id","deleteBrand","resp","event","addBrandForm","group","brand","desc","other","e","target","value","valObj","check","console","log","isValid","f","postBrand","reset","alertNot","myModal","hide","type","message","push","timeout","selector","template"],"mappings":"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","file":"views-brand-brand-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrandComponent} from './brand.component';\r\nimport { BrandRoutingModule } from './brand-routing.module';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrandRoutingModule,\r\n    ModalModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    AlertModule.forRoot()\r\n\r\n  ],\r\n  declarations: [ BrandComponent ]\r\n})\r\nexport class BrandModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BrandComponent } from './brand.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrandComponent,\r\n    data: {\r\n      title: 'Brand'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BrandRoutingModule {}\r\n","export default \"<div class=\\\"notification-alert\\\" *ngFor=\\\"let alert of alertsDismiss\\\" style=\\\"position: absolute; left: 0; right: 0; margin: auto; z-index: 999999 !important; width: 20%;\\\">\\r\\n  <alert [type]=\\\"alert.type\\\" dismissOnTimeout=\\\"5000\\\" [dismissible]=\\\"true\\\"\\r\\n    ><strong>{{alert?.message}}</strong></alert\\r\\n  >\\r\\n</div>\\r\\n<div\\r\\n  bsModal\\r\\n  #myModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header card-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Add New Brand</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"myModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\" id=\\\"medicineAddForm\\\" [formGroup]=\\\"addBrandForm\\\">\\r\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\r\\n          <div class=\\\"col-md-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"date-input\\\">Description</label>\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"date-input\\\"\\r\\n                type=\\\"text\\\"\\r\\n                name=\\\"date-input\\\"\\r\\n                placeholder=\\\"desc\\\"\\r\\n                formControlName=\\\"desc\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"company\\\">Status</label>\\r\\n              <select\\r\\n                id=\\\"select1\\\"\\r\\n                name=\\\"select1\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Select Status\\\"\\r\\n                (change)=\\\"onChang($event)\\\"\\r\\n              >\\r\\n                <option value=\\\"0\\\">Select Status</option>\\r\\n                <option [value]=\\\"true\\\">Available</option>\\r\\n                <option [value]=\\\"false\\\">Not Available</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"company\\\">Brand</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"company\\\"\\r\\n                placeholder=\\\"brand\\\"\\r\\n                formControlName=\\\"brand\\\"\\r\\n              />\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"company\\\">Other</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"MRP\\\"\\r\\n                formControlName=\\\"other\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-primary col-md-3\\\"\\r\\n          (click)=\\\"submit()\\\"\\r\\n          type=\\\"submit\\\"\\r\\n          form:submit\\r\\n        >\\r\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Add\\r\\n        </button>\\r\\n        <button type=\\\"reset\\\" class=\\\"btn btn-danger col-md-3\\\" (click)=\\\"reSet()\\\">\\r\\n          <i class=\\\"fa fa-ban\\\"></i> Reset\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary col-md-3\\\"\\r\\n          (click)=\\\"myModal.hide()\\\"\\r\\n        >\\r\\n          Close\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\\r\\n\\r\\n<div class=\\\"card\\\" style=\\\"margin-top: 30px\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h6>Available Brands</h6>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"header row\\\" style=\\\"margin-bottom: 20px\\\">\\r\\n      <div class=\\\"input-group col-md-3\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          id=\\\"input1-group2\\\"\\r\\n          name=\\\"input1-group2\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Search Brands\\\"\\r\\n          [(ngModel)]=\\\"term\\\"\\r\\n        />\\r\\n        <span class=\\\"input-group-append\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-pill\\\">\\r\\n            <i class=\\\"fa fa-search\\\"></i> Search\\r\\n          </button>\\r\\n        </span>\\r\\n      </div>\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-pill btn-secondary mr-1 col-md-3\\\"\\r\\n        data-toggle=\\\"modal\\\"\\r\\n        (click)=\\\"myModal.show()\\\"\\r\\n      >\\r\\n        Add New Brand\\r\\n      </button>\\r\\n    </div>\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>S. No.</th>\\r\\n          <th>Brand Name</th>\\r\\n          <th>Description</th>\\r\\n          <th>status</th>\\r\\n          <th>update</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr\\r\\n          *ngFor=\\\"\\r\\n            let brand of brands\\r\\n              | filter: term\\r\\n              | paginate\\r\\n                : {\\r\\n                    itemsPerPage: 10,\\r\\n                    currentPage: p,\\r\\n                    totalItems: brands.length\\r\\n                  };\\r\\n            let i = index\\r\\n          \\\"\\r\\n        >\\r\\n          <td>{{ i + 1 }}</td>\\r\\n          <td>{{ brand?.brand }}</td>\\r\\n          <td>{{ brand?.desc }}</td>\\r\\n          <td>\\r\\n            <span\\r\\n              class=\\\"badge\\\"\\r\\n              [class.badge-success]=\\\"brand?.status\\\"\\r\\n              [class.badge-danger]=\\\"!brand?.status\\\"\\r\\n              >{{ brand?.status ? \\\"Available\\\" : \\\"NotAvailable\\\" }}</span\\r\\n            >\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"update row\\\">\\r\\n              <button class=\\\"btn btn-sm btn-secondary btn-pill\\\">Edit</button>\\r\\n              <button\\r\\n                class=\\\"btn btn-sm btn-danger btn-pill\\\"\\r\\n                (click)=\\\"deleteBrands(brand._id)\\\"\\r\\n              >\\r\\n                <span class=\\\"cil-trash\\\"></span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <pagination-controls\\r\\n      (pageChange)=\\\"handlePageChange($event)\\\"\\r\\n    ></pagination-controls>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\nimport { Brand } from \"../../interfaces/response\";\r\nimport { BrandService } from \"../../services/brand.service\";\r\n\r\n@Component({\r\n  selector: \"app-brand\",\r\n  templateUrl: \"./brand.component.html\",\r\n  styleUrls: [\"./brand.component.scss\"],\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  @ViewChild(\"myModal\") public myModal: ModalDirective;\r\n  public addBrandForm: FormGroup;\r\n  public submitted = false;\r\n  alertsDismiss: any = [];\r\n  public alertType\r\n  brands = [];\r\n  p: number = 1;\r\n  constructor(private brandServ: BrandService, private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getBrands();\r\n    this.buildForm();\r\n  }\r\n\r\n  getBrands() {\r\n    this.brandServ.getBrands().subscribe((res: Brand) => {\r\n      this.brands = res.data;\r\n    });\r\n  }\r\n  deleteBrands(id) {\r\n    this.brandServ.deleteBrand(id).subscribe((resp) => {\r\n      this.getBrands();\r\n    });\r\n  }\r\n  handlePageChange(event) {\r\n    this.p = event;\r\n  }\r\n  buildForm(): void {\r\n    this.addBrandForm = this.fb.group({\r\n      brand: [\"\"],\r\n      desc: [\"\"],\r\n      other: [\"\"],\r\n    });\r\n  }\r\n  status = false;\r\n  onChang(e) {\r\n    if (e.target.value == \"true\") {\r\n      this.status = true;\r\n    } else {\r\n      this.status = false;\r\n    }\r\n  }\r\n\r\n  isValid(valObj){\r\n    var check = false;\r\n    if(valObj.brand && valObj.desc){\r\n      check = true;\r\n    }\r\n    return check;\r\n  }\r\n  get f() {\r\n    console.log(\r\n      \"this.addBrandForm.value.status: \",\r\n      this.addBrandForm.value.status\r\n    );\r\n    return {\r\n      ...this.addBrandForm.value,\r\n      status: this.status,\r\n    };\r\n  }\r\n\r\n  submit() {\r\n    if(this.isValid(this.f)){\r\n      this.submitted = true;\r\n      this.brandServ.postBrand(this.f).subscribe((resp) =>{\r\n        if(resp){\r\n          this.getBrands()\r\n          this.addBrandForm.reset();\r\n          this.alertNot(\"success\", \"Success\");\r\n          this.myModal.hide()\r\n          \r\n        }\r\n      })\r\n    }\r\n    else{\r\n      this.alertNot(\"danger\", \"Please enter all the details\");\r\n    }\r\n    console.log(this.f);\r\n  }\r\n  reSet() {\r\n    this.addBrandForm.reset();\r\n  }\r\n  alertNot(type, message): void {\r\n    this.alertsDismiss.push({\r\n      type: type,\r\n      message: `${message}`,\r\n      timeout: 5000\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJicmFuZC5jb21wb25lbnQuc2NzcyJ9 */\";"]}