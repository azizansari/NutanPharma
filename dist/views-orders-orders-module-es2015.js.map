{"version":3,"sources":["./src/app/services/orders.service.ts","./src/app/views/orders/orders.component.ts","./src/app/views/orders/orders.component.html","./src/app/views/orders/orders.component.scss","./src/app/views/orders/orders.module.ts","./src/app/views/orders/orders-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAkD;AACP;AACkB;IAKhD,aAAa,SAAb,aAAa;IAExB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAD7B,WAAM,GAAG,qEAAW,CAAC,MAAM,CAAC;IACK,CAAC;IAEzC,UAAU,CAAC,OAAO;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,qBAAqB,EAAE,OAAO,CAAC,CAAC;IACtE,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,cAAc,CAAC,CAAC;IACrD,CAAC;IACD,WAAW,CAAC,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,gBAAgB,EAAE,EAAE,CAAC;IAE7D,CAAC;CACF;;YAtBQ,+DAAU;;AAON,aAAa;IAHzB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;mFAG0B,+DAAU;GAFzB,aAAa,CAezB;AAfyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACP8C;AAE/B;AAEyB;AACJ;AACT;IAMxC,eAAe,SAAf,eAAe;IAU1B,YACU,OAAwB,EACxB,SAAwB,EACxB,MAAc;QAFd,YAAO,GAAP,OAAO,CAAiB;QACxB,cAAS,GAAT,SAAS,CAAe;QACxB,WAAM,GAAN,MAAM,CAAQ;QAZxB,MAAC,GAAW,CAAC,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QACf,WAAM,GAAG,EAAE,CAAC;QACZ,kBAAa,GAAQ,EAAE,CAAC;QAEjB,cAAS,GAAG,KAAK,CAAC;QA4CzB,UAAU;QACV,aAAQ,GAAG,CAAC,CAAC;QAOb,WAAM,GAAG,CAAC,CAAC;QAEX,mBAAc,GAAG,EAAE,CAAC;QA6CpB,gBAAgB;QAChB,0CAA0C;QAC1C,oDAAoD;QACpD,IAAI;QAEJ,kBAAa,GAAG,EAAE,CAAC;QACnB,cAAS,GAAG,EAAE,CAAC;IAjGZ,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACzD,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,GAAa,EAAE,EAAE;YACtD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,GAAa,EAAE,EAAE;YACrD,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW,CAAC,EAAE;QACZ,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChD,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IACjB,CAAC;IAqBD,QAAQ,CAAC,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;IACH,CAAC;IAED,IAAI,KAAK;QACP,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;IAC/B,CAAC;IACD,IAAI,QAAQ;QACV,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QACvC,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;IACxC,CAAC;IAED,IAAI,UAAU;QACZ,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QACvC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3D,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,IAAI,SAAS;QACX,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC9C,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;IAC/B,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAWD,KAAK;QACH,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG;gBACnB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;gBAC1B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gBAC9B,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;gBAC5B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gBAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;gBACnC,GAAG,EAAE,IAAI,CAAC,IAAI;gBACd,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG;aAC/B,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,QAAQ;gBACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;aACG;YACF,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;SACtD;IACH,CAAC;IAED,UAAU;QACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;gBAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;aACzD;SACF;QACD,mCAAmC;QACnC,iCAAiC;IACnC,CAAC;IAED,UAAU,CAAC,EAAE;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC;QACnF,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,OAAO,CAAC,MAAM;QACZ,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7E,KAAK,GAAG,IAAI,CAAC;SACd;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM;QACJ,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAClD,CAAC,IAAI,EAAE,EAAE;gBACP,IAAI,IAAI,EAAE;oBACR,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;oBACpC,IAAI,CAAC,SAAS,EAAE,CAAC;iBAClB;YACH,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;gBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACF,CAAC;SACH;aACG;YACF,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,8BAA8B,CAAC,CAAC;SACzD;IACH,CAAC;IAED,WAAW,KAAI,CAAC;IAEhB,KAAK;QACH,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,EAAE;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACvC,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,UAAU;QACZ,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,WAAW,EAAE,IAAI,CAAC,SAAS;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,WAAW,EAAE,IAAI,CAAC,aAAa;YAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;SAC1B,CAAC;IACJ,CAAC;IACD,QAAQ,CAAC,IAAI,EAAE,OAAO;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YACtB,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,GAAG,OAAO,EAAE;YACrB,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;CACF;;YAnPQ,0EAAe;YACf,sEAAa;YAHb,sDAAM;;;yBAiBZ,uDAAS,SAAC,aAAa;sBACvB,uDAAS,SAAC,YAAY;sBAyGtB,uDAAS,SAAC,SAAS;;AAjHT,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;;KAEvC,CAAC;mFAYmB,0EAAe;QACb,sEAAa;QAChB,sDAAM;GAbb,eAAe,CA2O3B;AA3O2B;;;;;;;;;;;;;ACZ5B;AAAe,2KAA4G,SAAS,UAAU,cAAc,4BAA4B,YAAY,yGAAyG,gBAAgB,goBAAgoB,u5EAAu5E,yBAAyB,mlBAAmlB,yBAAyB,4xDAA4xD,uBAAuB,+BAA+B,mBAAmB,4DAA4D,4BAA4B,+BAA+B,oBAAoB,mzLAAmzL,yJAAyJ,8EAA8E,SAAS,yBAAyB,oBAAoB,yBAAyB,mDAAmD,yBAAyB,uBAAuB,yBAAyB,0BAA0B,yBAAyB,sBAAsB,uxBAAuxB,E;;;;;;;;;;;;ACA9ga;AAAe,gHAAiD,2BAA2B,oBAAoB,mBAAmB,oBAAoB,uBAAuB,sBAAsB,8BAA8B,qBAAqB,uBAAuB,qBAAqB,GAAG,8FAA8F,2BAA2B,oBAAoB,mBAAmB,wBAAwB,GAAG,wFAAwF,oBAAoB,uBAAuB,iBAAiB,GAAG,6CAA6C,20CAA20C,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA37D;AACA;AACU;AACI;AACV;AACT;AACmB;AACnB;AACS;AACF;AACD;AACH;IAoBrC,YAAY,SAAZ,YAAY;CAGxB;;yBAFE,uDAAS,SAAC,YAAY;;AADZ,YAAY;IAlBxB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,0EAAmB;YACnB,+DAAW;YACX,qEAAgB;YAChB,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,4DAAY;YACZ,qEAAmB;YACnB,mEAAmB;YACnB,oEAAc;YACd,gEAAW,CAAC,OAAO,EAAE;SAGtB;QACD,YAAY,EAAE,CAAE,iEAAe,CAAE;KAClC,CAAC;GACW,YAAY,CAGxB;AAHwB;;;;;;;;;;;;;;;;;;;;AC/BgB;AACc;AACF;AAGrD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;QAC1B,IAAI,EAAE;YACJ,KAAK,EAAE,QAAQ;SAChB;KACF;CACF,CAAC;IAMW,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAJ/B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,mBAAmB,CAAG;AAAH","file":"views-orders-orders-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n  public apiUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postOrders(payload){\r\n    return this.http.post(`${this.apiUrl}api/c/orders/create`, payload);\r\n  }\r\n\r\n  getOrders() {\r\n    return this.http.get(`${this.apiUrl}api/c/orders`);\r\n  }\r\n  deleteOrder(id){\r\n    return this.http.delete(`${this.apiUrl}api/c/orders/${id}`)\r\n\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Response } from \"../../interfaces/response\";\r\nimport { MedicineService } from \"../../services/medicine.service\";\r\nimport { OrdersService } from \"../../services/orders.service\";\r\nimport { ModalDirective } from \"ngx-bootstrap/modal\";\r\n@Component({\r\n  selector: \"app-orders\",\r\n  templateUrl: \"./orders.component.html\",\r\n  styleUrls: [\"./orders.component.scss\"],\r\n})\r\nexport class OrdersComponent implements OnInit, OnDestroy {\r\n  p: number = 1;\r\n  medicines = [];\r\n  orders = [];\r\n  alertsDismiss: any = [];\r\n  public orderForm: FormGroup;\r\n  public submitted = false;\r\n  @ViewChild(\"orderDateIN\") _orderDate;\r\n  @ViewChild(\"largeModal\") public myModal: ModalDirective;\r\n\r\n  constructor(\r\n    private medServ: MedicineService,\r\n    private orderserv: OrdersService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getMedicines();\r\n    this.getOrders();\r\n    setTimeout(() => {\r\n      console.log(\"this._orderDate: \", this._orderDate);\r\n      this._orderDate.nativeElement.valueAsDate = new Date();\r\n    }, 1000);\r\n  }\r\n\r\n  getMedicines() {\r\n    this.medServ.getMedicines().subscribe((res: Response) => {\r\n      console.log(\"res: >>>>>>>>>>>>\", res);\r\n      this.medicines = res.data;\r\n      console.log(this.medicines);\r\n    });\r\n  }\r\n  getOrders() {\r\n    this.orderserv.getOrders().subscribe((res: Response) => {\r\n      this.orders = res.data;\r\n      console.log(this.orders);\r\n    });\r\n  }\r\n  deleteOrder(id) {\r\n    this.orderserv.deleteOrder(id).subscribe((resp) => {\r\n      this.getOrders();\r\n    });\r\n  }\r\n  handlePageChange(event) {\r\n    this.p = event;\r\n  }\r\n  medicine;\r\n  rate;\r\n  quantity;\r\n  orderQuantity;\r\n  // total1;\r\n  subTotal = 0;\r\n  discount;\r\n  gstRate;\r\n  // grandTotal;\r\n  gstAmount;\r\n  disAmount;\r\n  paidAmount;\r\n  listId = 1;\r\n  paymentMethod;\r\n  orderedProduct = [];\r\n  // gstTotal;\r\n  orderDate;\r\n  customerName;\r\n  customerContact;\r\n\r\n  onChange(e) {\r\n    console.log(e);\r\n    if (e) {\r\n      this.medicine = this.medicines.find((med) => med._id == e);\r\n      console.log(\"this.medicine: \", this.medicine);\r\n      this.rate = this.medicine.mrp;\r\n      this.quantity = this.medicine.quantity;\r\n      console.log(this.medicine.rate);\r\n    } else {\r\n      this.rate = \"\";\r\n      this.quantity = \"\";\r\n    }\r\n  }\r\n\r\n  get total() {\r\n    const val = this.rate * this.orderQuantity;\r\n    return isNaN(val) ? \"\" : val;\r\n  }\r\n  get gstTotal() {\r\n    const val = 0.01 * this.gstRate * this.subTotal;\r\n    this.gstAmount = isNaN(val) ? \"\" : val;\r\n    return this.subTotal + this.gstAmount;\r\n  }\r\n\r\n  get grandTotal() {\r\n    const val = 0.01 * this.discount * this.subTotal;\r\n    this.disAmount = isNaN(val) ? \"\" : val;\r\n    const gt = this.subTotal + this.gstAmount - this.disAmount;\r\n    return gt;\r\n  }\r\n\r\n  get dueAmount() {\r\n    const val = this.grandTotal - this.paidAmount;\r\n    return isNaN(val) ? \"\" : val;\r\n  }\r\n  get invoiceId() {\r\n    return Math.floor(Math.random() * 1000000 + 1);\r\n  }\r\n\r\n  // onQuant(ev) {\r\n  //   this.orderQuantity = ev.target.value;\r\n  //   // this.total = this.rate * this.orderQuantity;\r\n  // }\r\n\r\n  localMedicine = {};\r\n  orderList = [];\r\n\r\n  @ViewChild(\"select1\") select1;\r\n  onAdd() {\r\n    if (this.orderQuantity) {\r\n      this.localMedicine = {\r\n        brand: this.medicine.brand,\r\n        batchNo: this.medicine.batchNo,\r\n        expiry: this.medicine.expiry,\r\n        pcaking: this.medicine.packing,\r\n        medicine: this.medicine.productName,\r\n        mrp: this.rate,\r\n        orderQuantity: this.orderQuantity,\r\n        total: this.total,\r\n        medicine_id: this.medicine._id,\r\n      };\r\n      this.orderList.push(this.localMedicine);\r\n      console.log(this.orderList);\r\n      this.rate = \"\";\r\n      this.quantity = \"\";\r\n      this.orderQuantity = \"\";\r\n      this.subTotal =\r\n        this.subTotal + this.orderList[this.orderList.length - 1].total;\r\n      console.log(this.subTotal);\r\n      console.log(\"check>>>\", this.select1);\r\n      this.subTotal = 0;\r\n      this.orderTotal();\r\n    }\r\n    else{\r\n      this.alertNot(\"danger\", \"Please add order quantity\");\r\n    }\r\n  }\r\n\r\n  orderTotal() {\r\n    for (let i = 0; i < this.orderList.length; i++) {\r\n      if (this.orderList[i].total) {\r\n        this.subTotal = this.subTotal + this.orderList[i].total;\r\n      }\r\n    }\r\n    // this.grandTotal = this.subTotal;\r\n    // this.gstTotal = this.subTotal;\r\n  }\r\n\r\n  removeItem(id) {\r\n    this.orderList = this.orderList.filter((orderitem) => id != orderitem.medicine_id);\r\n    this.subTotal = 0;\r\n    this.orderTotal();\r\n  }\r\n  isValid(valObj) {\r\n    var check = false;\r\n    if (valObj.customerName && valObj.paidAmount && valObj.orderedItem.length > 0) {\r\n      check = true;\r\n    }\r\n\r\n    return check;\r\n  }\r\n\r\n  submit() {\r\n    console.log();\r\n    console.log(this.formValues);\r\n    if(this.isValid(this.formValues)){\r\n      this.orderserv.postOrders(this.formValues).subscribe(\r\n        (resp) => {\r\n          if (resp) {\r\n            console.log(\"success\", resp);\r\n            this.reSet();\r\n            this.myModal.hide();\r\n            this.alertNot(\"success\", \"Success\");\r\n            this.getOrders();\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n    else{\r\n      this.alertNot(\"danger\", \"Please enter all the details\");\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n\r\n  reSet() {\r\n    this.customerContact = \"\";\r\n    this.customerName = \"\";\r\n    this.paymentMethod = \"\";\r\n    this.subTotal = 0;\r\n    this.discount = null;\r\n    this.gstRate = null;\r\n    this.paidAmount = null;\r\n    this.orderList = [];\r\n  }\r\n\r\n  toGetPrint(id) {\r\n    this.router.navigate([]).then((result) => {\r\n      location.replace(`#/orders/${id}`);\r\n    });\r\n  }\r\n\r\n  get formValues() {\r\n    return {\r\n      orderDate: this.orderDate,\r\n      customerName: this.customerName,\r\n      customerContact: this.customerContact,\r\n      orderedItem: this.orderList,\r\n      subTotal: this.subTotal,\r\n      gstRate: this.gstRate,\r\n      gstAmount: this.gstAmount,\r\n      discount: this.disAmount,\r\n      dueAmount: this.dueAmount,\r\n      paidAmount: this.paidAmount,\r\n      grandTotal: this.grandTotal,\r\n      paymentType: this.paymentMethod,\r\n      invoiceId: this.invoiceId,\r\n    };\r\n  }\r\n  alertNot(type, message): void {\r\n    this.alertsDismiss.push({\r\n      type: type,\r\n      message: `${message}`,\r\n      timeout: 5000\r\n    });\r\n  }\r\n}\r\n","export default \"\\r\\n\\r\\n<div class=\\\"notification-alert\\\" *ngFor=\\\"let alert of alertsDismiss\\\" style=\\\"position: absolute; left: 0; right: 0; margin: auto; z-index: 999999 !important; width: 20%;\\\">\\r\\n  <alert [type]=\\\"alert.type\\\" dismissOnTimeout=\\\"5000\\\" [dismissible]=\\\"true\\\"\\r\\n    ><strong>{{alert?.message}}</strong></alert\\r\\n  >\\r\\n</div>\\r\\n\\r\\n<div\\r\\n  bsModal\\r\\n  #largeModal=\\\"bs-modal\\\"\\r\\n  class=\\\"modal fade\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header card-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">New Order</h4>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close\\\"\\r\\n          (click)=\\\"largeModal.hide()\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n        >\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <label for=\\\"date-input\\\">Order Date</label>\\r\\n            <input\\r\\n              #orderDateIN\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"date-input\\\"\\r\\n              type=\\\"date\\\"\\r\\n              name=\\\"date-input\\\"\\r\\n              placeholder=\\\"date\\\"\\r\\n              [(ngModel)]=\\\"orderDate\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\r\\n          <div class=\\\"form-group col-md-5\\\">\\r\\n            <label for=\\\"cutomerName\\\">Customer Name</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              placeholder=\\\"Customer Name\\\"\\r\\n              [(ngModel)]=\\\"customerName\\\"\\r\\n              name=\\\"customerName\\\"\\r\\n              id=\\\"customerName\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group col-md-5\\\">\\r\\n            <label for=\\\"customerContact\\\">Contact</label>\\r\\n            <input\\r\\n              type=\\\"number\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"customerContact\\\"\\r\\n              placeholder=\\\"Contact\\\"\\r\\n              [(ngModel)]=\\\"customerContact\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"table\\\" style=\\\"border-bottom: 2px solid grey\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Product</th>\\r\\n                <th>MRP</th>\\r\\n                <th>Available Quantity</th>\\r\\n                <th>Quantity</th>\\r\\n                <th>Total</th>\\r\\n                <th>Add</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <ng-select\\r\\n                      #select1\\r\\n                      name=\\\"select1\\\"\\r\\n                      class=\\\"form-control custom\\\"\\r\\n                      (change)=\\\"onChange($event)\\\"\\r\\n                    >\\r\\n                      <ng-option\\r\\n                        *ngFor=\\\"let medicine of medicines\\\"\\r\\n                        [value]=\\\"medicine?._id\\\"\\r\\n\\r\\n                      >\\r\\n                        {{ medicine?.productName }}\\r\\n                      </ng-option>\\r\\n                    </ng-select>\\r\\n\\r\\n                    <!-- <select\\r\\n                      #select1\\r\\n                      name=\\\"select1\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      (change)=\\\"onChange($event)\\\"\\r\\n                    >\\r\\n                      <option value=\\\"0\\\">Select Medicine</option>\\r\\n                      <option\\r\\n                        [value]=\\\"medicine?._id\\\"\\r\\n                        *ngFor=\\\"let medicine of medicines\\\"\\r\\n                      >\\r\\n                        {{ medicine?.productName }}\\r\\n                      </option>\\r\\n                    </select> -->\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      disabled\\r\\n                      [(ngModel)]=\\\"rate\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      disabled\\r\\n                      [(ngModel)]=\\\"quantity\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"number\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      [(ngModel)]=\\\"orderQuantity\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <input\\r\\n                      type=\\\"text\\\"\\r\\n                      class=\\\"form-control\\\"\\r\\n                      disabled\\r\\n                      [(ngModel)]=\\\"total\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <Button class=\\\"btn btn-success\\\" (click)=\\\"onAdd()\\\"\\r\\n                    ><span class=\\\"cil-plus\\\"></span\\r\\n                  ></Button>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let orderitem of orderList\\\">\\r\\n                <td>{{ orderitem?.medicine }}</td>\\r\\n                <td>{{ orderitem?.rate }}</td>\\r\\n                <td></td>\\r\\n                <td>{{ orderitem?.orderQuantity }}</td>\\r\\n                <td>{{ orderitem?.total }}</td>\\r\\n                <td>\\r\\n                  <button\\r\\n                    class=\\\"btn btn-danger\\\"\\r\\n                    (click)=\\\"removeItem(orderitem?.medicine_id)\\\"\\r\\n                  >\\r\\n                    <span class=\\\"cil-trash\\\"></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\" style=\\\"margin: 20px\\\">\\r\\n          <div class=\\\"col-md-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"subtotal\\\">Sub Total</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"subtotal\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"subTotal\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"gst\\\">GST</label>\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"gst\\\"\\r\\n                placeholder=\\\"GST %\\\"\\r\\n                [(ngModel)]=\\\"gstRate\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"total\\\">Total</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"total\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"gstTotal\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"discount\\\">Discount (in %)</label>\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"discount\\\"\\r\\n                placeholder=\\\"Discount %\\\"\\r\\n                [(ngModel)]=\\\"discount\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"grandtotal\\\">Grand Total</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"grangtotal\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"grandTotal\\\"\\r\\n              />\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"paidamount\\\">Paid Amount</label>\\r\\n              <input\\r\\n                type=\\\"number\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"paidamount\\\"\\r\\n                placeholder=\\\"Amount\\\"\\r\\n                [(ngModel)]=\\\"paidAmount\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"dueamount\\\">Due Amount</label>\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                id=\\\"dueamount\\\"\\r\\n                disabled\\r\\n                [(ngModel)]=\\\"dueAmount\\\"\\r\\n              />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"paymentType\\\">Payment Type</label>\\r\\n              <select\\r\\n                id=\\\"select1\\\"\\r\\n                name=\\\"select1\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                [(ngModel)]=\\\"paymentMethod\\\"\\r\\n              >\\r\\n                <option value=\\\"0\\\">Please select</option>\\r\\n                <option value=\\\"Cash\\\">Cash</option>\\r\\n                <option value=\\\"Card\\\">Card</option>\\r\\n                <option value=\\\"UPI\\\">UPI</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-primary col-md-3\\\"\\r\\n          (click)=\\\"submit()\\\"\\r\\n        >\\r\\n          <i class=\\\"fa fa-dot-circle-o\\\"></i> Submit\\r\\n        </button>\\r\\n        <button type=\\\"reset\\\" (click)=\\\"reSet()\\\" class=\\\"btn btn-danger col-md-3\\\">\\r\\n          <i class=\\\"fa fa-ban\\\"></i> Reset\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary col-md-3\\\"\\r\\n          (click)=\\\"largeModal.hide()\\\"\\r\\n        >\\r\\n          Close\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- /.modal-content -->\\r\\n  </div>\\r\\n  <!-- /.modal-dialog -->\\r\\n</div>\\r\\n<!-- /.modal -->\\r\\n\\r\\n<div class=\\\"card\\\" style=\\\"margin-top: 30px\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h6>Order datails</h6>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <div class=\\\"header row\\\" style=\\\"margin-bottom: 20px\\\">\\r\\n      <div class=\\\"input-group col-md-3\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          id=\\\"input1-group2\\\"\\r\\n          name=\\\"input1-group2\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Search Orders\\\"\\r\\n          [(ngModel)]=\\\"term\\\"\\r\\n        />\\r\\n        <span class=\\\"input-group-append\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-pill\\\">\\r\\n            <i class=\\\"fa fa-search\\\"></i> Search\\r\\n          </button>\\r\\n        </span>\\r\\n      </div>\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-pill btn-secondary mr-1 col-md-3\\\"\\r\\n        data-toggle=\\\"modal\\\"\\r\\n        (click)=\\\"largeModal.show()\\\"\\r\\n      >\\r\\n        New Order\\r\\n      </button>\\r\\n    </div>\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>S.No.</th>\\r\\n          <th>Invoice Id</th>\\r\\n          <th>Order Date</th>\\r\\n          <th>Customer Name</th>\\r\\n          <th>Contact</th>\\r\\n          <th>Payment status</th>\\r\\n          <th>update</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr\\r\\n          *ngFor=\\\"\\r\\n            let order of orders\\r\\n              | filter: term\\r\\n              | paginate\\r\\n                : {\\r\\n                    itemsPerPage: 10,\\r\\n                    currentPage: p,\\r\\n                    totalItems: orders.length\\r\\n                  };\\r\\n            let i = index\\r\\n          \\\"\\r\\n        >\\r\\n          <td>{{ i + 1 }}</td>\\r\\n          <td>{{ order?.invoiceId }}</td>\\r\\n          <td>{{ order?.createdAt | amDateFormat: \\\"DD/MM/YYYY\\\" }}</td>\\r\\n          <td>{{ order?.customerName }}</td>\\r\\n          <td>{{ order?.customerContact }}</td>\\r\\n          <td>{{ order?.paymentType }}</td>\\r\\n          <td>\\r\\n            <div class=\\\"update row\\\">\\r\\n              <button\\r\\n                class=\\\"btn btn-sm btn-secondary btn-pill\\\"\\r\\n                (click)=\\\"toGetPrint(order?._id)\\\"\\r\\n              >\\r\\n                Print\\r\\n              </button>\\r\\n              <button\\r\\n                class=\\\"btn btn-sm btn-danger btn-pill\\\"\\r\\n                (click)=\\\"deleteOrder(order?._id)\\\"\\r\\n              >\\r\\n                <span class=\\\"cil-trash\\\"></span>\\r\\n              </button>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <pagination-controls\\r\\n      (pageChange)=\\\"handlePageChange($event)\\\"\\r\\n    ></pagination-controls>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \".ng-select.custom ::ng-deep .ng-dropdown-panel {\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  display: block;\\n  margin-top: 8px;\\n  margin-left: -12px;\\n  background: white;\\n  border: 1px solid #e4e7ea;\\n  min-width: 150px;\\n  border-radius: 4px;\\n  border-top: none;\\n}\\n\\n.ng-select.custom ::ng-deep .ng-dropdown-panel .ng-dropdown-panel-items .ng-option:hover {\\n  box-sizing: border-box;\\n  cursor: pointer;\\n  display: block;\\n  background: #f0f3f5;\\n}\\n\\n.ng-select.custom ::ng-deep .ng-dropdown-panel .ng-dropdown-panel-items .ng-option {\\n  cursor: pointer;\\n  padding-left: 15px;\\n  padding: 6px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxvcmRlcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtBQUFKOztBQUlBO0VBQ0ksc0JBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBREo7O0FBR0E7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0FBQUoiLCJmaWxlIjoib3JkZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ubmctc2VsZWN0LmN1c3RvbSA6Om5nLWRlZXAgLm5nLWRyb3Bkb3duLXBhbmVsICB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTJweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZTRlN2VhO1xuICAgIG1pbi13aWR0aDogMTUwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJvcmRlci10b3A6IG5vbmU7XG5cbn1cblxuLm5nLXNlbGVjdC5jdXN0b20gOjpuZy1kZWVwIC5uZy1kcm9wZG93bi1wYW5lbCAubmctZHJvcGRvd24tcGFuZWwtaXRlbXMgLm5nLW9wdGlvbjpob3ZlciB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogI2YwZjNmNTtcbn1cbi5uZy1zZWxlY3QuY3VzdG9tIDo6bmctZGVlcCAubmctZHJvcGRvd24tcGFuZWwgLm5nLWRyb3Bkb3duLXBhbmVsLWl0ZW1zIC5uZy1vcHRpb24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgcGFkZGluZzogNnB4O1xufSJdfQ== */\";","import { NgModule, ViewChild } from '@angular/core';\r\nimport { OrdersComponent} from './orders.component';\r\nimport { OrdersRoutingModule } from './orders-routing.module';\r\nimport { ModalDirective, ModalModule } from 'ngx-bootstrap/modal';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MomentModule } from 'angular2-moment';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\n\r\n@NgModule({\r\n  imports: [\r\n    OrdersRoutingModule,\r\n    ModalModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MomentModule,\r\n    Ng2SearchPipeModule,\r\n    NgxPaginationModule,\r\n    NgSelectModule,\r\n    AlertModule.forRoot()\r\n\r\n\r\n  ],\r\n  declarations: [ OrdersComponent ]\r\n})\r\nexport class OrdersModule { \r\n  @ViewChild('largeModal') public largeModal: ModalDirective;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrdersComponent } from './orders.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrdersComponent,\r\n    data: {\r\n      title: 'Orders'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrdersRoutingModule {}"],"sourceRoot":"webpack:///"}